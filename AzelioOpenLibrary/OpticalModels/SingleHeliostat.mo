within AzelioOpenLibrary.OpticalModels;

model SingleHeliostat "Single heliostat model"
  parameter Modelica.SIunits.Area ApertureArea = 72 "Dish aperture area";
  parameter Modelica.SIunits.Length z0 = 6 "tower height [m]";
  parameter Modelica.SIunits.Length z1 = 0 "heliostat center height [m]";
  parameter Modelica.SIunits.Length e1 = -24 "heliostat east position relative tower [m]";
  parameter Modelica.SIunits.Length n1 = -24 "heliostat north position relative tower [m]";
  parameter Modelica.SIunits.ReflectionCoefficient Reflectivity = 0.92 "Mirror reflectivity";
  parameter Real ReceiverIntercept = 0.9 "Receiver intercept factor";
  parameter Real soilingConstant = 0.04 "Soiling constant";
  parameter Real shadingConstant = 0.06 "Soiling constant";
  Modelica.SIunits.Energy Etoheliostat;
  Modelica.SIunits.Energy Etoreceiver;
  Modelica.SIunits.Energy Etocavitywall;
  Real Effectiveness;
  Real theta;
  Real alpha;
  Real beta;
  Modelica.Blocks.Interfaces.RealInput DNI "DNI input" annotation(Placement(visible = true, transformation(origin = {-157.18, 0}, extent = {{-20, -20}, {20, 20}}, rotation = 0), iconTransformation(origin = {-93.748, -50}, extent = {{-13.748, -13.748}, {13.748, 13.748}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealInput az_in "azimuth angle input" annotation(Placement(visible = true, transformation(origin = {-155, 77.961}, extent = {{-20, -20}, {20, 20}}, rotation = 0), iconTransformation(origin = {-93.729, 70}, extent = {{-13.748, -13.748}, {13.748, 13.748}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealInput elev_in "elevation angle input" annotation(Placement(visible = true, transformation(origin = {-155, 40}, extent = {{-20, -20}, {20, 20}}, rotation = 0), iconTransformation(origin = {-93.875, 30}, extent = {{-13.748, -13.748}, {13.748, 13.748}}, rotation = 0)));
  Modelica.Blocks.Math.Gain MirrorArea(k = ApertureArea) annotation(Placement(visible = true, transformation(origin = {-95, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Gain ReceiverHit(k = ReceiverIntercept) annotation(Placement(visible = true, transformation(origin = {70, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Gain MirrorReflectivity(k = Reflectivity) annotation(Placement(visible = true, transformation(origin = {-35, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Product product1 annotation(Placement(visible = true, transformation(origin = {-65, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Product product2 annotation(Placement(visible = true, transformation(origin = {-3.25, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.Constant soilingConst(k = soilingConstant) annotation(Placement(visible = true, transformation(origin = {-130, -40}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.Constant const(k = 1) annotation(Placement(visible = true, transformation(origin = {-100, -59}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Add soilingAdd(k2 = +1, k1 = -1) annotation(Placement(visible = true, transformation(origin = {-70, -40}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Gain WallHit(k = 1 - ReceiverIntercept) annotation(Placement(visible = true, transformation(origin = {70, -40}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_b fluxToWall_port "Flux deliverd to cavity wall" annotation(Placement(visible = true, transformation(origin = {148.154, -40}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {100, -50}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow WallFlux annotation(Placement(visible = true, transformation(origin = {110, -40}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow ReceiverFlux annotation(Placement(visible = true, transformation(origin = {110, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_b fluxToReceiver_port "Flux delivered to receiver" annotation(Placement(visible = true, transformation(origin = {148.154, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {99.767, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.Constant shadingConst(k = shadingConstant) annotation(Placement(visible = true, transformation(origin = {-130, -80}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {99.767, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Add shadingAdd(k2 = -1, k1 = +1) annotation(Placement(visible = true, transformation(origin = {-70, -80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Product product3 annotation(Placement(visible = true, transformation(origin = {33.102, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
algorithm
  alpha := elev_in * Modelica.Constants.pi / 180;
  beta := az_in * Modelica.Constants.pi / 180;
  theta := 0.5 * Modelica.Math.acos(((z0 - z1) * Modelica.Math.sin(alpha) - e1 * Modelica.Math.cos(alpha) * Modelica.Math.sin(beta) - n1 * Modelica.Math.cos(beta) * Modelica.Math.sin(beta)) / sqrt((z0 - z1) ^ 2 + e1 ^ 2 + n1 ^ 2));
  Effectiveness := cos(theta);
equation
  product1.u1 = Effectiveness;
  der(Etoheliostat) = product1.y;
  der(Etoreceiver) = fluxToReceiver_port.Q_flow;
  der(Etocavitywall) = fluxToWall_port.Q_flow;
  connect(soilingAdd.y, product2.u2) annotation(Line(visible = true, origin = {-27.687, -23}, points = {{-31.313, -17}, {9.438, -17}, {9.438, 17}, {12.438, 17}}, color = {1, 37, 163}));
  connect(const.y, soilingAdd.u2) annotation(Line(visible = true, origin = {-85.25, -52.5}, points = {{-3.75, -6.5}, {0.25, -6.5}, {0.25, 6.5}, {3.25, 6.5}}, color = {0, 0, 127}));
  connect(soilingAdd.u1, soilingConst.y) annotation(Line(visible = true, origin = {-108.25, -37}, points = {{26.25, 3}, {-7.75, 3}, {-7.75, -3}, {-10.75, -3}}, color = {1, 37, 163}));
  connect(DNI, MirrorArea.u) annotation(Line(visible = true, origin = {-132.09, 0}, points = {{-25.09, 0}, {25.09, 0}}, color = {1, 37, 163}));
  connect(WallHit.y, WallFlux.Q_flow) annotation(Line(visible = true, origin = {90.5, -40}, points = {{-9.5, 0}, {9.5, 0}}, color = {0, 0, 127}));
  connect(WallFlux.port, fluxToWall_port) annotation(Line(visible = true, origin = {134.077, -40}, points = {{-14.077, 0}, {14.077, 0}}, color = {191, 0, 0}));
  connect(ReceiverHit.y, ReceiverFlux.Q_flow) annotation(Line(visible = true, origin = {90.5, 0}, points = {{-9.5, 0}, {9.5, 0}}, color = {0, 0, 127}));
  connect(ReceiverFlux.port, fluxToReceiver_port) annotation(Line(visible = true, origin = {134.077, 0}, points = {{-14.077, 0}, {14.077, 0}}, color = {191, 0, 0}));
  connect(const.y, shadingAdd.u1) annotation(Line(visible = true, origin = {-85.25, -66.5}, points = {{-3.75, 7.5}, {0.25, 7.5}, {0.25, -7.5}, {3.25, -7.5}}, color = {1, 37, 163}));
  connect(shadingConst.y, shadingAdd.u2) annotation(Line(visible = true, origin = {-92.75, -83}, points = {{-26.25, 3}, {7.75, 3}, {7.75, -3}, {10.75, -3}}, color = {1, 37, 163}));
  connect(product2.y, product3.u1) annotation(Line(visible = true, origin = {16.264, 3}, points = {{-8.514, -3}, {1.838, -3}, {1.838, 3}, {4.838, 3}}, color = {1, 37, 163}));
  connect(shadingAdd.y, product3.u2) annotation(Line(visible = true, origin = {-0.423, -43}, points = {{-58.577, -37}, {18.526, -37}, {18.526, 37}, {21.526, 37}}, color = {1, 37, 163}));
  connect(product3.y, ReceiverHit.u) annotation(Line(visible = true, origin = {51.051, 0}, points = {{-6.949, 0}, {6.949, 0}}, color = {1, 37, 163}));
  connect(product3.y, WallHit.u) annotation(Line(visible = true, origin = {53.026, -20}, points = {{-8.923, 20}, {1.974, 20}, {1.974, -20}, {4.974, -20}}, color = {1, 37, 163}));
  connect(MirrorArea.y, product1.u2) annotation(Line(visible = true, origin = {-80.25, -3}, points = {{-3.75, 3}, {0.25, 3}, {0.25, -3}, {3.25, -3}}, color = {1, 37, 163}));
  connect(product1.y, MirrorReflectivity.u) annotation(Line(visible = true, origin = {-50.5, 0}, points = {{-3.5, -0}, {3.5, 0}}, color = {1, 37, 163}));
  connect(MirrorReflectivity.y, product2.u1) annotation(Line(visible = true, origin = {-18.938, 3}, points = {{-5.062, -3}, {0.688, -3}, {0.688, 3}, {3.688, 3}}, color = {1, 37, 163}));
  annotation(Icon(coordinateSystem(extent = {{-100, -100}, {100, 100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {10, 10}), graphics = {Rectangle(visible = true, lineColor = {128, 128, 128}, fillColor = {149, 23, 41}, fillPattern = FillPattern.Solid, lineThickness = 5, extent = {{-97, -97}, {97, 97}}, radius = 20), Line(visible = true, origin = {-2.513, -62.816}, points = {{-77.487, 0}, {77.487, 0}}, color = {255, 255, 255}, thickness = 2.5), Line(visible = true, origin = {-38.564, -19.883}, points = {{-6.776, 42.173}, {-14.374, -42.173}, {14.754, -42.173}, {6.396, 42.173}}, color = {255, 255, 255}, thickness = 2.5), Line(visible = true, origin = {-41.347, 41.286}, points = {{-8.653, 12.158}, {-8.653, -18.237}, {12.979, -18.237}, {12.979, 12.158}, {-8.653, 12.158}}, color = {255, 255, 255}, thickness = 2.5), Line(visible = true, origin = {52.267, -26.253}, points = {{-6.1, 12.828}, {-19.628, -25.376}, {7.733, -23.747}, {24.095, 23.466}, {-6.1, 12.828}}, color = {255, 255, 255}, thickness = 2.5), Line(visible = true, origin = {53.908, -56.636}, points = {{-2.368, 6.636}, {-2.368, -0.608}, {-6.168, -0.608}, {-6.168, -5.42}, {6.092, -5.42}, {6.092, -0.608}, {2.444, -0.608}, {2.444, 6.636}}, color = {255, 255, 255}, thickness = 2.5), Line(visible = true, origin = {18.774, 24.504}, points = {{16.344, 35.496}, {28.713, -54.504}, {-45.057, 19.008}}, color = {255, 255, 255}, thickness = 0.5, arrow = {Arrow.None, Arrow.Filled}, arrowSize = 7)}), Diagram(coordinateSystem(extent = {{-148.5, -105}, {148.5, 105}}, preserveAspectRatio = true, initialScale = 0.1, grid = {5, 5})));
end SingleHeliostat;
